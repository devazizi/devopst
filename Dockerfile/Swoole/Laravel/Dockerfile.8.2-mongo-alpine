ARG PHP_VERSION=8.2

ARG COMPOSER_VERSION=latest

FROM composer:${COMPOSER_VERSION} AS vendor

FROM php:${PHP_VERSION}-cli-alpine

ARG WWWUSER=1000
ARG WWWGROUP=1000
ARG TZ=UTC

ENV TERM=xterm-color \
   WITH_HORIZON=false \
   WITH_SCHEDULER=false \
   OCTANE_SERVER=swoole \
   USER=octane \
   ROOT=/var/www/html \
   COMPOSER_FUND=0 \
   COMPOSER_MAX_PARALLEL_HTTP=24

WORKDIR ${ROOT}

SHELL ["/bin/sh", "-eou", "pipefail", "-c"]

RUN ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime \
 && echo ${TZ} > /etc/timezone

ADD --chmod=0755 https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/

RUN apk update; \
   apk upgrade; \
   apk add --no-cache \
   curl \
   wget \
   nano \
   ncdu \
   procps \
   ca-certificates \
   supervisor \
   libsodium-dev \
   # Install PHP extensions
   && install-php-extensions \
   bz2 \
   pcntl \
   mbstring \
   bcmath \
   sockets \
   opcache \
   exif \
   pdo_mysql \
   zip \
   intl \
   gd \
   redis \
   pgsql \
   pdo_pgsql \
   rdkafka \
   memcached \
   ldap \
   igbinary \
   swoole \
   mongodb-tools autoconf gcc musl-dev make \
   && pecl install mongodb \
   && apk del autoconf gcc musl-dev make \
   && docker-php-source delete \
   && rm -rf /var/cache/apk/* /tmp/* /var/tmp/*


COPY --link --from=vendor /usr/bin/composer /usr/bin/composer
RUN echo "extension=mongodb.so" > "$(php --ini | grep 'Scan for additional .ini files' | awk '{print $NF}')/mongodb.ini"


ARG WWWUSER=1000
ARG WWWGROUP=1000
ARG TZ=UTC

RUN arch="$(apk --print-arch)" \
   && case "$arch" in \
   armhf) _cronic_fname='supercronic-linux-arm' ;; \
   aarch64) _cronic_fname='supercronic-linux-arm64' ;; \
   x86_64) _cronic_fname='supercronic-linux-amd64' ;; \
   x86) _cronic_fname='supercronic-linux-386' ;; \
   *) echo >&2 "error: unsupported architecture: $arch"; exit 1 ;; \
   esac \
   && wget -q "https://github.com/aptible/supercronic/releases/download/v0.2.29/${_cronic_fname}" \
   -O /usr/bin/supercronic \
   && chmod +x /usr/bin/supercronic \
   && mkdir -p /etc/supercronic \
   && echo "*/1 * * * * php ${ROOT}/artisan schedule:run --no-interaction" > /etc/supercronic/laravel

RUN addgroup -g ${WWWGROUP} ${USER} \
   && adduser -D -h ${ROOT} -G ${USER} -u ${WWWUSER} -s /bin/sh ${USER}

RUN mkdir -p /var/log/supervisor /var/run/supervisor \
   && chown -R ${USER}:${USER} ${ROOT} /var/log /var/run \
   && chmod -R a+rw ${ROOT} /var/log /var/run

RUN cp ${PHP_INI_DIR}/php.ini-production ${PHP_INI_DIR}/php.ini

USER ${USER}


COPY --link --chown=${USER}:${USER} deployment/supervisord.conf /etc/supervisor/
COPY --link --chown=${USER}:${USER} deployment/octane/Swoole/supervisord.swoole.conf /etc/supervisor/conf.d/
COPY --link --chown=${USER}:${USER} deployment/octane/RoadRunner/supervisord.roadrunner.conf /etc/supervisor/conf.d/
COPY --link --chown=${USER}:${USER} deployment/octane/FrankenPHP/supervisord.frankenphp.conf /etc/supervisor/conf.d/
COPY --link --chown=${USER}:${USER} deployment/octane/FrankenPHP/supervisord.frankenphp.conf /etc/supervisor/conf.d/
COPY --link --chown=${USER}:${USER} deployment/supervisord.*.conf /etc/supervisor/conf.d/
COPY --link --chown=${USER}:${USER} deployment/php.ini ${PHP_INI_DIR}/conf.d/99-octane.ini
COPY --link --chown=${USER}:${USER} deployment/start-container /usr/local/bin/start-container
COPY --link --chown=${USER}:${USER} deployment/healthcheck /usr/local/bin/healthcheck



RUN chmod +x /usr/local/bin/start-container /usr/local/bin/healthcheck


EXPOSE 8000

CMD ["php", "artisan", "octane:start", "--server=swoole", "--host=0.0.0.0", "--port=8000"]

HEALTHCHECK --start-period=5s --interval=2s --timeout=5s --retries=8 CMD healthcheck || exit 1
